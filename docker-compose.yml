secrets:
  cf_dns_api_token:
    file: ./secrets/cf_dns_api_token
  email:
    file: ./secrets/email
  influxdb_admin_password:
    file: ./secrets/influxdb_admin_password
  influxdb_admin_token:
    file: ./secrets/influxdb_admin_token

services:
  traefik:
    image: traefik:3.4.4
    container_name: traefik
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
      - "8080:8080"
    environment:
      - TZ=Europe/Paris
      - CF_DNS_API_TOKEN_FILE=/run/secrets/cf_dns_api_token
      - CF_EMAIL_FILE=/run/secrets/email
    secrets:
      - cf_dns_api_token
      - email
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - ./traefik/traefik.toml:/etc/traefik/traefik.toml:ro
      - ./traefik/rules.toml:/etc/traefik/rules.toml:ro
      - ./traefik/acme.json:/etc/traefik/acme.json:rw
    labels:
      - traefik.enable=true
      - traefik.http.routers.traefik.service=api@internal
      - traefik.http.routers.traefik.entrypoints=websecure
      - traefik.http.routers.traefik.rule=Host(`traefik.feignman.online`)
      - traefik.http.routers.traefik.tls.certresolver=dns-cloudflare

  vaultwarden:
    image: vaultwarden/server:1.34.1-alpine
    container_name: vaultwarden
    volumes:
      - ./volumes/vaultwarden:/data/
    ports:
      - 8090:80
    restart: unless-stopped
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.vaultwarden.rule=Host(`vault.feignman.online`)"
      - "traefik.http.routers.vaultwarden.entrypoints=websecure"
      - "traefik.http.routers.vaultwarden.tls.certresolver=dns-cloudflare"

  nzbget:
    image: ghcr.io/linuxserver/nzbget:version-v25.2
    container_name: nzbget
    environment:
      - PUID=3002
      - PGID=3002
      - TZ=Europe/Paris
      - UMASK_SET=022 #optional
    volumes:
      - ./volumes/nzbget/config:/config
      - /truenas/downloads:/downloads
    labels:
      - "traefik.enable=false"
      - "traefik.http.routers.nzbget.rule=Host(`nzbget.feignman.online`)"
      - "traefik.http.routers.nzbget.entrypoints=websecure"
      - "traefik.http.routers.vaultwarden.tls.certresolver=dns-cloudflare"
      # - "traefik.http.routers.nzbget.middlewares=auth@file"
    ports:
      - 6789:6789
    restart: unless-stopped

  deluge:
    image: linuxserver/deluge:2.1.1
    container_name: deluge
    network_mode: host
    environment:
      - PUID=3002
      - PGID=3002
      - TZ=Europe/Paris
      #- UMASK_SET=022 #optional
      #- DELUGE_LOGLEVEL=error #optional
    volumes:
      - ./volumes/deluge/config:/config
      - /truenas/downloads:/downloads
    labels:
      - "traefik.enable=false"
      - "traefik.http.routers.nzbget.rule=Host(`deluge.feignman.online`)"
      - "traefik.http.routers.nzbget.entrypoints=websecure"
      - "traefik.http.routers.vaultwarden.tls.certresolver=dns-cloudflare"
    restart: unless-stopped

  # influxdb:
  #   image: influxdb:2.7
  #   container_name: influxdb
  #   ports:
  #     - "8086:8086"
  #   volumes:
  #     - ./volumes/influxdb:/var/lib/influxdb
  #   environment:
  #     - DOCKER_INFLUXDB_INIT_MODE=setup
  #     - DOCKER_INFLUXDB_INIT_USERNAME=admin
  #     - DOCKER_INFLUXDB_INIT_PASSWORD=/run/secrets/influxdb_admin_password
  #     - DOCKER_INFLUXDB_INIT_ORG=home
  #     - DOCKER_INFLUXDB_INIT_BUCKET=home
  #     - DOCKER_INFLUXDB_INIT_RETENTION=30d
  #     - DOCKER_INFLUXDB_INIT_ADMIN_TOKEN=/run/secrets/influxdb_admin_token
  #     - TZ=Europe/Paris
  #   restart: unless-stopped

  plex:
    image: linuxserver/plex:latest
    container_name: plex
    network_mode: host
    environment:
      - PUID=3002
      - PGID=993  # needs to be set to the GID of 'render' to allow GPU access
      - VERSION=docker
      - SYSCALL_MAX_ENABLED=1
      - TZ=Europe/Paris
      # - UMASK_SET=022 #optional
    volumes:
      - ./volumes/plex/config:/config
      - ./volumes/plex/transcode:/transcode
      - /truenas/Movies:/data/Movies
      - /truenas/Series:/data/Series
      - /truenas/downloads/downloaded/extra:/data/Extras
    devices:
      - /dev/dri:/dev/dri
    restart: unless-stopped

  radarr:
    image: linuxserver/radarr:latest
    container_name: radarr
    environment:
      - PUID=3002
      - PGID=3002
      - TZ=Europe/Paris
      # - UMASK_SET=022 #optional
    volumes:
      - ./volumes/radarr/config:/config
      - /truenas/Movies:/movies
      - /truenas/downloads:/downloads
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.radarr.rule=Host(`radarr.feignman.online`)"
      - "traefik.http.routers.radarr.entrypoints=websecure"
      - "traefik.http.routers.radarr.middlewares=auth@file"
    ports:
      - 7878:7878
    restart: unless-stopped

  sonarr:
    image: linuxserver/sonarr:latest
    container_name: sonarr
    environment:
      - PUID=3002
      - PGID=3002
      - TZ=Europe/Paris
      - UMASK_SET=022 #optional
    volumes:
      - ./volumes/sonarr/config:/config
      - /truenas/Series:/series
      - /truenas/downloads:/downloads
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.sonarr.rule=Host(`sonarr.feignman.online`)"
      - "traefik.http.routers.sonarr.entrypoints=websecure"
      - "traefik.http.routers.sonarr.middlewares=auth@file"
    ports:
      - 8989:8989
    restart: unless-stopped

  telegraf:
     container_name: telegraf
     image: telegraf:1.35
     restart: unless-stopped
     # Added for latest telegraf: https://www.influxdata.com/blog/docker-run-telegraf-as-non-root/
     user: telegraf:995
     privileged: true
     environment:
       HOST_MOUNT_PREFIX: /rootfs
       HOST_RUN: /rootfs/run
       HOST_VAR: /rootfs/var
       HOST_PROC: /rootfs/proc
       HOST_SYS: /rootfs/sys
       HOST_ETC: /rootfs/etc
     volumes:
       - ./telegraf/docker-lxc-host.conf:/etc/telegraf/telegraf.conf:ro
       - /var/run/docker.sock:/var/run/docker.sock:ro
       - /:/rootfs:ro
